---Referencia Accion
--1:Alta-Insert
--2:Modificacion-Update
--3:Borrado-Delete


CREATE PROCEDURE CONTROL_ZETA.SP_BUSCA_PAIS(@NOMBRE_PAIS VARCHAR,
                                            @CODIGO_PAIS INT OUTPUT )
AS
BEGIN

SET @CODIGO_PAIS=0

SELECT @CODIGO_PAIS = PAIS_ID 
  FROM  CONTROL_ZETA.PAIS 
 WHERE  UPPER(PAIS_DETALLE) = UPPER(@NOMBRE_PAIS)


IF (@CODIGO_PAIS = 0)
BEGIN
INSERT INTO CONTROL_ZETA.PAIS VALUES(UPPER(@NOMBRE_PAIS))
set @CODIGO_PAIS = @@IDENTITY
END

END

CREATE PROCEDURE CONTROL_ZETA.SP_BUSCA_NACIONALIDAD
                         (@NOMBRE_NAC VARCHAR,
                          @CODIGO_NAC INT OUTPUT )
AS
BEGIN

SET @CODIGO_NAC=0

SELECT @CODIGO_NAC = NAC_ID 
  FROM  CONTROL_ZETA.NACIONALIDAD 
 WHERE  UPPER(NAC_DETALLE) = UPPER(@NOMBRE_NAC)


IF (@CODIGO_NAC = 0)
BEGIN
INSERT INTO CONTROL_ZETA.NACIONALIDAD VALUES(UPPER(@NOMBRE_NAC))
set @CODIGO_NAC = @@IDENTITY
END

END




/*CREATE PROCEDURE CONTROL_ZETA.SP_BUSCA_PAIS(@NOMBRE_PAIS VARCHAR,
                                            @CODIGO_PAIS INT OUTPUT )

*/
CREATE PROCEDURE CONTROL_ZETA.SP_BUSCA_LOCALIDAD(@NOMBRE_LOCALIDAD VARCHAR(50),
                                                @CODIGO_LOCAL INT OUTPUT )

AS
BEGIN

SET @CODIGO_LOCAL=0

SELECT @CODIGO_LOCAL = LOC_ID 
  FROM  CONTROL_ZETA.LOCALIDAD 
 WHERE  UPPER(LOC_DETALLE) = UPPER(@NOMBRE_LOCALIDAD)

IF (@CODIGO_LOCAL = 0)
BEGIN
INSERT INTO CONTROL_ZETA.LOCALIDAD VALUES(@NOMBRE_LOCALIDAD)
set @CODIGO_LOCAL = @@IDENTITY
END

END

-- 
CREATE FUNCTION CONTROL_ZETA.FN_REGISTRADO_HOTEL (@ID_HOTEL INT,
                                                  @RESERVA_ID  NUMERIC
                                                  )
RETURNS  INT
AS  
BEGIN
RETURN (select CASE 
               WHEN C.CLIENTE_ESTADO = 'H' 
                    THEN COUNT(*) 
               ELSE -1
               END 
          from CONTROL_ZETA.RESERVA R, CONTROL_ZETA.CLIENTE C
         where R.RESERVA_ID = @RESERVA_ID
           and R.RESERVA_ID_HOTEL = @ID_HOTEL
           AND R.CLIENTE_ID = C.CLIENTE_ID
           AND C.CLIENTE_ESTADO = 'H'
           GROUP BY R.RESERVA_ID, R.CLIENTE_ID, C.CLIENTE_ESTADO)
END;





----ABM ROL (Deberia cargar la tabla ROL, ROL_FUNC)
CREATE PROCEDURE CONTROL_ZETA.SP_ABM_ROL (@accion SMALLINT,@nombre varchar(20),@estado varchar(1))
as
begin
end;
---IMPORTANTE:Se tendria que hacer otro SP para asociar el ROL con la Funcionalidad y que desde la app se ejecute varias veces


---ASIGNACION DE FUNCIONES A ROL (Carga tabla ROL_FUNC)
CREATE PROCEDURE CONTROL_ZETA.SP_ROL_FUNC(@accion SMALLINT,@rol_id TINYINT, @func_id TINYINT)
AS
BEGIN
END;


---LOGIN (Retorna 1 si loggea ok, 0 si loggea nok)
CREATE FUNCTION CONTROL_ZETA.SP_LOGIN (@usuario varchar (50),@pass varchar(70))
returns tinyint
as
begin
return;
end;

---ABM USUARIO (Carga tabla USUARIO y EMPLEADO) FALTA: poner tipo de dato a dom
CREATE PROCEDURE CONTROL_ZETA.SP_ABM_USUARIO
(@accion SMALLINT,@usuario varchar (50),@pass varchar(70),@nombre VARCHAR(50),@apellido VARCHAR(50),@tipo_doc TINYINT,@doc VARCHAR(15),@mail VARCHAR(50),@tel VARCHAR(10),@dom,@fecha_nac date,@estado VARCHAR(1))
as
begin
end;

---ASIGNACION DE USUARIO_ROL_HOTEL (Carga tabla USR_ROL_HOTEL)
CREATE PROCEDURE CONTROL_ZETA.SP_USR_ROL_HOTEL (@accion SMALLINT,@usuario varchar (50),@rol_id TINYINT,@hotel_id INT)
as
begin
end;

---ABM CLIENTE (Carga tabla clientes)
/*
--BUSCO
1) NO EXISTE -> ALTA
2) EXISTE 1 SOLO -> ELIMINAR, MODIFICAR
3) EXISTE MAS DE 1 --> DEVUELVO TODO Y QUE MODIFIQUE LO QUE QUIERA EL RECEPCIONISTA
*/
-- CREATE PROCEDURE CONTROL_ZETA.ABM_CLIENTE 
ALTER PROCEDURE CONTROL_ZETA.ABM_CLIENTE 
(@NOMBRE VARCHAR(50),
@APELLIDO VARCHAR(50),
@TIPO_IDENT TINYINT,
@NRO_IDENT VARCHAR(15),
@EMAIL VARCHAR(50),
@TEL VARCHAR(10),
@NOMBRE_LOC VARCHAR(50),
@NOMBRE_PAIS VARCHAR(50),
@DOM_CALLE VARCHAR(50),
@DOM_NRO INT,
@DEPTO VARCHAR(2),
@DOM_PISO VARCHAR(10),
@NACIONALIDAD_NOMBRE VARCHAR(50),
@FECHA_NAC DATETIME,
@CODIGO_ENTRADA TINYINT,
--@USERNAME VARCHAR(50),
@HOTEL INT,
@RESERVA_ID NUMERIC,
@CLIENTE_ID NUMERIC,
@CODIGO TINYINT OUTPUT, 
@P_CURSOR CURSOR VARYING OUTPUT)
AS

BEGIN

DECLARE @ID_PAIS TINYINT 
DECLARE @ID_LOCALIDAD TINYINT 
DECLARE @CODIGO_GEN TINYINT
DECLARE @CODIGO_NAC TINYINT
DECLARE @ROW_SELECT INT

IF @CODIGO_ENTRADA IN (1,2)
BEGIN
EXEC CONTROL_ZETA.SP_BUSCA_PAIS @NOMBRE_PAIS, @ID_PAIS OUTPUT

EXEC CONTROL_ZETA.SP_BUSCA_LOCALIDAD @NOMBRE_LOC, @ID_LOCALIDAD OUTPUT

EXEC CONTROL_ZETA.SP_BUSCA_NACIONALIDAD @NACIONALIDAD_NOMBRE, @CODIGO_NAC OUTPUT 

END

 SET @CODIGO_GEN = dbo.CONTROL_ZETA.FN_REGISTRADO_HOTEL(@HOTEL, @RESERVA_ID)
                                                  

-- SI @CODIGO_GEN = 1 ENTONCES YA ESTA DADO DE ALTA EN EL HOTEL

IF (@CODIGO_ENTRADA =  1  AND @CODIGO_GEN = 0 ) --ALTA
BEGIN

	INSERT INTO CONTROL_ZETA.CLIENTE
	(CLIENTE_NOMBRE,CLIENTE_APELLIDO,CLIENTE_ID_TIPO_DOC,
	 CLIENTE_DOC, CLIENTE_MAIL,CLIENTE_TEL,CLIENTE_ID_LOC, 
	 CLIENTE_ID_PAIS_ORIGEN, CLIENTE_DOM_CALLE,CLIENTE_DOM_NRO,
	 CLIENTE_DPTO,CLIENTE_DOM_PISO,CLIENTE_NAC_ID,CLIENTE_ESTADO,
	 CLIENTE_FECHA_NAC)
	VALUES
	(@NOMBRE,@APELLIDO,@TIPO_IDENT,@NRO_IDENT, @EMAIL, @TEL,
  	 @ID_LOCALIDAD, @ID_PAIS, @DOM_CALLE,@DOM_NRO,@DEPTO,
	 @DOM_PISO,@CODIGO_NAC,'H',@FECHA_NAC)
	 
	 SET @CODIGO_ENTRADA = 0
	 
END
ELSE IF (@CODIGO_ENTRADA =  2 AND @CODIGO_GEN = 1 ) --MODIFICO
BEGIN
	UPDATE CONTROL_ZETA.CLIENTE
	SET CLIENTE_NOMBRE = @NOMBRE,
		CLIENTE_APELLIDO = @APELLIDO,
		CLIENTE_ID_TIPO_DOC = @TIPO_IDENT,
		CLIENTE_DOC = @NRO_IDENT , 
		CLIENTE_MAIL = @EMAIL , 
		CLIENTE_TEL = @TEL ,
		CLIENTE_ID_LOC = @ID_LOCALIDAD , 
		CLIENTE_ID_PAIS_ORIGEN = @ID_PAIS , 
		CLIENTE_DOM_CALLE = @DOM_CALLE ,
		CLIENTE_DOM_NRO = @DOM_NRO ,
		CLIENTE_DPTO = @DEPTO ,
		CLIENTE_DOM_PISO = @DOM_PISO ,
		CLIENTE_NAC_ID = @CODIGO_NAC ,
		CLIENTE_ESTADO = 'H' ,
		CLIENTE_FECHA_NAC = @FECHA_NAC 
	WHERE CLIENTE_ID = @CLIENTE_ID    
	
	SET @CODIGO_ENTRADA = 0
END

ELSE IF @CODIGO_ENTRADA =  3 AND @CODIGO_GEN = 1  -- ELIMINO, BAJA LOGICA 
BEGIN
	UPDATE CONTROL_ZETA.CLIENTE
	SET CLIENTE_ESTADO = 'I' 
	WHERE CLIENTE_ID = @CLIENTE_ID    
END


-- CONSULTO SI PERTENECE AL HOTEL

IF (@CODIGO_ENTRADA = 0 AND @CODIGO_GEN = 1 ) 

BEGIN

SET @P_CURSOR = CURSOR
	FORWARD_ONLY STATIC FOR
	SELECT * 
	FROM CONTROL_ZETA.CLIENTE
	WHERE (CLIENTE_NOMBRE = @NOMBRE AND CLIENTE_APELLIDO = @APELLIDO)
	   OR (CLIENTE_ID_TIPO_DOC = @TIPO_IDENT AND CLIENTE_DOC = @NRO_IDENT)
	   OR (CLIENTE_MAIL = @EMAIL)


	SELECT @ROW_SELECT = COUNT(*)
	FROM CONTROL_ZETA.CLIENTE
	WHERE (CLIENTE_NOMBRE = @NOMBRE AND CLIENTE_APELLIDO = @APELLIDO)
	   OR (CLIENTE_ID_TIPO_DOC = @TIPO_IDENT AND CLIENTE_DOC = @NRO_IDENT)
	   OR (CLIENTE_MAIL = @EMAIL)

IF @ROW_SELECT = 0 
	BEGIN
	SET @CODIGO= 2
	END
ELSE IF @ROW_SELECT = 1
	BEGIN
	SET @CODIGO= 1
	END
ELSE IF @ROW_SELECT > 1 
	BEGIN
	SET @CODIGO= 4
	END

END

END


---ABM HOTEL

---ABM HABITACION

---ALTA RESERVA

---MODIFICACION RESERVA

---CANCELAR RESERVA

---CHECK-IN
---CHECK OUT
--SELECT * FROM CONTROL_ZETA.ESTADIA
-- 1- INGRESO
-- 2- EGRESO
CREATE PROCEDURE CONTROL_ZETA.SP_REGISTRAR_ESTADIA (@RESERVA_ID NUMERIC,
                                                    @USUARIO VARCHAR(50),
                                                    @CODIGO_IN_OUT TINYINT,
                                                    @FECHA DATETIME,
                                                    @CODIGO INT OUTPUT)
AS
BEGIN
DECLARE @CANT INT
DECLARE @CLIENTE_ID NUMERIC
DECLARE @ESTADIA INT
SET @CANT = 0
SET @ESTADIA = 0
SET @CLIENTE_ID = 0
SET @CODIGO = 0

IF @CODIGO_IN_OUT = 1 -- INGRESO
BEGIN

-- DUDAS EN CAMBIAR EL SELECT, CORREGIRLO SI FALLA
Select @CANT = COUNT(*) , @CLIENTE_ID = CLIENTE_ID
  from CONTROL_ZETA.RESERVA 
 where RESERVA_ID = @RESERVA_ID 
   and RESERVA_FECHA_INICIO = CONVERT(VARCHAR(12),@FECHA,103)
   AND RESERVA_FECHA_HASTA IS NULL
   GROUP BY RESERVA_ID,CLIENTE_ID ;
   
IF @CANT = 1
BEGIN   
-- CONTINUA OK

INSERT INTO CONTROL_ZETA.ESTADIA (EST_RESERVA_ID, EST_FECHA_DESDE)
VALUES
(@RESERVA_ID, CONVERT(VARCHAR(12),GETDATE(),103))

SET @ESTADIA = @@IDENTITY

INSERT INTO CONTROL_ZETA.ESTADIA_CLIENTE (EST_ID, CLIENTE_ID)
VALUES
(@ESTADIA, @CLIENTE_ID)
END
ELSE
BEGIN
SET @codigo = 5
END
END

IF (@CODIGO_IN_OUT = 2)  -- EGRESO
BEGIN
   
UPDATE CONTROL_ZETA.ESTADIA
  SET EST_FECHA_HASTA = @FECHA
 WHERE EST_RESERVA_ID = @RESERVA_ID

END
  
END



---REGISTRAR CONSUMIBLES

---FACTURAR ESTADIA
CREATE PROCEDURE SP_REALIZAR_FACTURACION (@RESERVA_ID)
AS
BEGIN



/*

(Regimen_precio*habitacion_tipo_porcentual)+(hotel_recarga_estrellas*hotel_cant_estrellas)*reserva_cant_noches=475. 

M.ITEM_FACTURA_MONTO * M.Reserva_Cant_Noches no me interesa que haya pasado menos noches
+ consumibles
ver el regimen
con all_inclusive 1 item q reste todo
con all_inclusive_moderado todo lo que no incluya se suma y se resta los otro






*/

END;



---ESTADISTICA