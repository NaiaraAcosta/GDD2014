---Referencia Accion
--1:Alta-Insert
--2:Modificacion-Update
--3:Borrado-Delete


CREATE PROCEDURE CONTROL_ZETA.SP_BUSCA_PAIS(@NOMBRE_PAIS VARCHAR,
                                            @CODIGO_PAIS INT OUTPUT )
AS
BEGIN

SET @CODIGO_PAIS=0

SELECT @CODIGO_PAIS = PAIS_ID 
  FROM  CONTROL_ZETA.PAIS 
 WHERE  UPPER(PAIS_DETALLE) = UPPER(@NOMBRE_PAIS)


IF (@CODIGO_PAIS = 0)
BEGIN
INSERT INTO CONTROL_ZETA.PAIS VALUES(UPPER(@NOMBRE_PAIS))
set @CODIGO_PAIS = @@IDENTITY
END

END

CREATE PROCEDURE CONTROL_ZETA.SP_BUSCA_NACIONALIDAD
                         (@NOMBRE_NAC VARCHAR,
                          @CODIGO_NAC INT OUTPUT )
AS
BEGIN

SET @CODIGO_NAC=0

SELECT @CODIGO_NAC = NAC_ID 
  FROM  CONTROL_ZETA.NACIONALIDAD 
 WHERE  UPPER(NAC_DETALLE) = UPPER(@NOMBRE_NAC)


IF (@CODIGO_NAC = 0)
BEGIN
INSERT INTO CONTROL_ZETA.NACIONALIDAD VALUES(UPPER(@NOMBRE_NAC))
set @CODIGO_NAC = @@IDENTITY
END

END




/*CREATE PROCEDURE CONTROL_ZETA.SP_BUSCA_PAIS(@NOMBRE_PAIS VARCHAR,
                                            @CODIGO_PAIS INT OUTPUT )

*/
CREATE PROCEDURE CONTROL_ZETA.SP_BUSCA_LOCALIDAD(@NOMBRE_LOCALIDAD VARCHAR(50),
                                                @CODIGO_LOCAL INT OUTPUT )

AS
BEGIN

SET @CODIGO_LOCAL=0

SELECT @CODIGO_LOCAL = LOC_ID 
  FROM  CONTROL_ZETA.LOCALIDAD 
 WHERE  UPPER(LOC_DETALLE) = UPPER(@NOMBRE_LOCALIDAD)

IF (@CODIGO_LOCAL = 0)
BEGIN
INSERT INTO CONTROL_ZETA.LOCALIDAD VALUES(@NOMBRE_LOCALIDAD)
set @CODIGO_LOCAL = @@IDENTITY
END

END

-- 
CREATE FUNCTION CONTROL_ZETA.FN_REGISTRADO_HOTEL (@ID_HOTEL INT,
                                                  @RESERVA_ID  NUMERIC
                                                  )
RETURNS  INT
AS  
BEGIN
RETURN (select CASE 
               WHEN C.CLIENTE_ESTADO = 'H' 
                    THEN COUNT(*) 
               ELSE -1
               END 
          from CONTROL_ZETA.RESERVA R, CONTROL_ZETA.CLIENTE C
         where R.RESERVA_ID = @RESERVA_ID
           and R.RESERVA_ID_HOTEL = @ID_HOTEL
           AND R.CLIENTE_ID = C.CLIENTE_ID
           AND C.CLIENTE_ESTADO = 'H'
           GROUP BY R.RESERVA_ID, R.CLIENTE_ID, C.CLIENTE_ESTADO)
END;





----ABM ROL (Deberia cargar la tabla ROL, ROL_FUNC)
CREATE PROCEDURE CONTROL_ZETA.SP_ABM_ROL (@accion SMALLINT,@nombre varchar(20),@estado varchar(1))
as
begin
end;
---IMPORTANTE:Se tendria que hacer otro SP para asociar el ROL con la Funcionalidad y que desde la app se ejecute varias veces


---ASIGNACION DE FUNCIONES A ROL (Carga tabla ROL_FUNC)
CREATE PROCEDURE CONTROL_ZETA.SP_ROL_FUNC(@accion SMALLINT,@rol_id TINYINT, @func_id TINYINT)
AS
BEGIN
END;


---LOGIN (Retorna 1 si loggea ok, 0 si loggea nok)
CREATE FUNCTION CONTROL_ZETA.SP_LOGIN (@usuario varchar (50),@pass varchar(70))
returns tinyint
as
begin
return;
end;

---ABM USUARIO (Carga tabla USUARIO y EMPLEADO) FALTA: poner tipo de dato a dom
CREATE PROCEDURE CONTROL_ZETA.SP_ABM_USUARIO
 @ACCION SMALLINT,
 @USUARIO VARCHAR (50),
 @PASS VARCHAR(70),
 @NOMBRE VARCHAR(50),
 @APELLIDO VARCHAR(50),
 @TIPO_DOC TINYINT,
 @DOC VARCHAR(15),
 @MAIL VARCHAR(50),
 @TEL VARCHAR(10),
 @DOM VARCHAR(50),
 @FECHA_NAC DATE,
 @ESTADO VARCHAR(1),
 @ERROR TINYINT OUTPUT 
AS
BEGIN

IF (@ACCION=1)
BEGIN
	IF NOT EXISTS (SELECT 1 FROM CONTROL_ZETA.USUARIO WHERE USR_USERNAME = @USUARIO)
	BEGIN
		INSERT INTO CONTROL_ZETA.USUARIO
		(USR_USERNAME, USR_PASS, USR_ESTADO, USR_INTENTOS)
		VALUES(@USUARIO, @PASS, 'H',1)
		
		INSERT INTO CONTROL_ZETA.EMPLEADO
		(USR_USERNAME, EMP_NOMBRE, EMP_APELLIDO, EMP_ID_TIPO_DOC, EMP_DOC,
		 EMP_MAIL, EMP_TEL, EMP_DOM, EMP_FECHA_NAC)
		 VALUES
		 (@USUARIO, @NOMBRE, @APELLIDO,@TIPO_DOC, @DOC,
		  @MAIL, @TEL, @DOM, @FECHA_NAC)
				
		SET @ERROR=1
	END;
	ELSE
	SET @ERROR=3
END;
ELSE IF @ACCION=2
BEGIN
--MODIFICACION
	IF EXISTS (SELECT 1 FROM CONTROL_ZETA.USUARIO WHERE USR_USERNAME = @USUARIO)
	BEGIN

			UPDATE CONTROL_ZETA.EMPLEADO 
			SET EMP_NOMBRE = @NOMBRE, 
			    EMP_APELLIDO = @APELLIDO , 
			    EMP_ID_TIPO_DOC = @TIPO_DOC , 
			    EMP_DOC = @DOC,
		        EMP_MAIL = @MAIL, 
		        EMP_TEL = @TEL, 
		        EMP_DOM = @DOM, 
		        EMP_FECHA_NAC = @FECHA_NAC
			WHERE USR_USERNAME = @USUARIO


			DELETE CONTROL_ZETA.USR_ROL_HOTEL 
			WHERE USR_USERNAME = @USUARIO
			
			SET @ERROR=1
		END;
		ELSE
		SET @ERROR=3
	
END

ELSE IF @ACCION=3
BEGIN
--BAJA
IF EXISTS (SELECT 1 FROM CONTROL_ZETA.USUARIO WHERE USR_USERNAME = @USUARIO)
	BEGIN
		UPDATE CONTROL_ZETA.USUARIO 
		SET USR_ESTADO = 'I' 
		WHERE USR_USERNAME= @USUARIO
		
		SET @ERROR=1
	END
	ELSE
		SET @ERROR=2
END

END;



---ASIGNACION DE USUARIO_ROL_HOTEL (Carga tabla USR_ROL_HOTEL)
CREATE PROCEDURE CONTROL_ZETA.SP_USR_ROL_HOTEL 
@USUARIO VARCHAR (50),
@ROL_ID TINYINT,
@HOTEL_ID INT
as
begin

 INSERT INTO CONTROL_ZETA.USR_ROL_HOTEL
 (USR_USERNAME, HOTEL_ID, ROL_ID)
 VALUES
 (@USUARIO,  @HOTEL_ID, @ROL_ID)


end;

---ABM CLIENTE (Carga tabla clientes)
/*
--BUSCO
1) NO EXISTE -> ALTA
2) EXISTE 1 SOLO -> ELIMINAR, MODIFICAR
3) EXISTE MAS DE 1 --> DEVUELVO TODO Y QUE MODIFIQUE LO QUE QUIERA EL RECEPCIONISTA
*/
-- CREATE PROCEDURE CONTROL_ZETA.ABM_CLIENTE 
ALTER PROCEDURE CONTROL_ZETA.ABM_CLIENTE 
(@NOMBRE VARCHAR(50),
@APELLIDO VARCHAR(50),
@TIPO_IDENT TINYINT,
@NRO_IDENT VARCHAR(15),
@EMAIL VARCHAR(50),
@TEL VARCHAR(10),
@NOMBRE_LOC VARCHAR(50),
@NOMBRE_PAIS VARCHAR(50),
@DOM_CALLE VARCHAR(50),
@DOM_NRO INT,
@DEPTO VARCHAR(2),
@DOM_PISO VARCHAR(10),
@NACIONALIDAD_NOMBRE VARCHAR(50),
@FECHA_NAC DATETIME,
@CODIGO_ENTRADA TINYINT,
--@USERNAME VARCHAR(50),
@HOTEL INT,
@RESERVA_ID NUMERIC,
@CLIENTE_ID NUMERIC,
@CODIGO TINYINT OUTPUT, 
@P_CURSOR CURSOR VARYING OUTPUT)
AS

BEGIN

DECLARE @ID_PAIS TINYINT 
DECLARE @ID_LOCALIDAD TINYINT 
DECLARE @CODIGO_GEN TINYINT
DECLARE @CODIGO_NAC TINYINT
DECLARE @ROW_SELECT INT

IF @CODIGO_ENTRADA IN (1,2)
BEGIN
EXEC CONTROL_ZETA.SP_BUSCA_PAIS @NOMBRE_PAIS, @ID_PAIS OUTPUT

EXEC CONTROL_ZETA.SP_BUSCA_LOCALIDAD @NOMBRE_LOC, @ID_LOCALIDAD OUTPUT

EXEC CONTROL_ZETA.SP_BUSCA_NACIONALIDAD @NACIONALIDAD_NOMBRE, @CODIGO_NAC OUTPUT 

END

 SET @CODIGO_GEN = dbo.CONTROL_ZETA.FN_REGISTRADO_HOTEL(@HOTEL, @RESERVA_ID)
                                                  

-- SI @CODIGO_GEN = 1 ENTONCES YA ESTA DADO DE ALTA EN EL HOTEL

IF (@CODIGO_ENTRADA =  1  AND @CODIGO_GEN = 0 ) --ALTA
BEGIN

	INSERT INTO CONTROL_ZETA.CLIENTE
	(CLIENTE_NOMBRE,CLIENTE_APELLIDO,CLIENTE_ID_TIPO_DOC,
	 CLIENTE_DOC, CLIENTE_MAIL,CLIENTE_TEL,CLIENTE_ID_LOC, 
	 CLIENTE_ID_PAIS_ORIGEN, CLIENTE_DOM_CALLE,CLIENTE_DOM_NRO,
	 CLIENTE_DPTO,CLIENTE_DOM_PISO,CLIENTE_NAC_ID,CLIENTE_ESTADO,
	 CLIENTE_FECHA_NAC)
	VALUES
	(@NOMBRE,@APELLIDO,@TIPO_IDENT,@NRO_IDENT, @EMAIL, @TEL,
  	 @ID_LOCALIDAD, @ID_PAIS, @DOM_CALLE,@DOM_NRO,@DEPTO,
	 @DOM_PISO,@CODIGO_NAC,'H',@FECHA_NAC)
	 
	 SET @CODIGO_ENTRADA = 0
	 
END
ELSE IF (@CODIGO_ENTRADA =  2 AND @CODIGO_GEN = 1 ) --MODIFICO
BEGIN
	UPDATE CONTROL_ZETA.CLIENTE
	SET CLIENTE_NOMBRE = @NOMBRE,
		CLIENTE_APELLIDO = @APELLIDO,
		CLIENTE_ID_TIPO_DOC = @TIPO_IDENT,
		CLIENTE_DOC = @NRO_IDENT , 
		CLIENTE_MAIL = @EMAIL , 
		CLIENTE_TEL = @TEL ,
		CLIENTE_ID_LOC = @ID_LOCALIDAD , 
		CLIENTE_ID_PAIS_ORIGEN = @ID_PAIS , 
		CLIENTE_DOM_CALLE = @DOM_CALLE ,
		CLIENTE_DOM_NRO = @DOM_NRO ,
		CLIENTE_DPTO = @DEPTO ,
		CLIENTE_DOM_PISO = @DOM_PISO ,
		CLIENTE_NAC_ID = @CODIGO_NAC ,
		CLIENTE_ESTADO = 'H' ,
		CLIENTE_FECHA_NAC = @FECHA_NAC 
	WHERE CLIENTE_ID = @CLIENTE_ID    
	
	SET @CODIGO_ENTRADA = 0
END

ELSE IF @CODIGO_ENTRADA =  3 AND @CODIGO_GEN = 1  -- ELIMINO, BAJA LOGICA 
BEGIN
	UPDATE CONTROL_ZETA.CLIENTE
	SET CLIENTE_ESTADO = 'I' 
	WHERE CLIENTE_ID = @CLIENTE_ID    
END


-- CONSULTO SI PERTENECE AL HOTEL

IF (@CODIGO_ENTRADA = 0 AND @CODIGO_GEN = 1 ) 

BEGIN

SET @P_CURSOR = CURSOR
	FORWARD_ONLY STATIC FOR
	SELECT * 
	FROM CONTROL_ZETA.CLIENTE
	WHERE (CLIENTE_NOMBRE = @NOMBRE AND CLIENTE_APELLIDO = @APELLIDO)
	   OR (CLIENTE_ID_TIPO_DOC = @TIPO_IDENT AND CLIENTE_DOC = @NRO_IDENT)
	   OR (CLIENTE_MAIL = @EMAIL)


	SELECT @ROW_SELECT = COUNT(*)
	FROM CONTROL_ZETA.CLIENTE
	WHERE (CLIENTE_NOMBRE = @NOMBRE AND CLIENTE_APELLIDO = @APELLIDO)
	   OR (CLIENTE_ID_TIPO_DOC = @TIPO_IDENT AND CLIENTE_DOC = @NRO_IDENT)
	   OR (CLIENTE_MAIL = @EMAIL)

IF @ROW_SELECT = 0 
	BEGIN
	SET @CODIGO= 2
	END
ELSE IF @ROW_SELECT = 1
	BEGIN
	SET @CODIGO= 1
	END
ELSE IF @ROW_SELECT > 1 
	BEGIN
	SET @CODIGO= 4
	END

END

END


---ABM HOTEL

---ABM HABITACION

---ALTA RESERVA

---MODIFICACION RESERVA

---CANCELAR RESERVA

---CHECK-IN
---CHECK OUT
--SELECT * FROM CONTROL_ZETA.ESTADIA
-- 1- INGRESO
-- 2- EGRESO
CREATE PROCEDURE CONTROL_ZETA.SP_REGISTRAR_ESTADIA (@RESERVA_ID NUMERIC,
                                                    @USUARIO VARCHAR(50),
                                                    @CODIGO_IN_OUT TINYINT,
                                                    @FECHA DATETIME,
                                                    @CODIGO INT OUTPUT)
AS
BEGIN
DECLARE @CANT INT
DECLARE @CLIENTE_ID NUMERIC
DECLARE @ESTADIA INT
SET @CANT = 0
SET @ESTADIA = 0
SET @CLIENTE_ID = 0
SET @CODIGO = 0

IF @CODIGO_IN_OUT = 1 -- INGRESO
BEGIN

-- DUDAS EN CAMBIAR EL SELECT, CORREGIRLO SI FALLA
Select @CANT = COUNT(*) , @CLIENTE_ID = CLIENTE_ID
  from CONTROL_ZETA.RESERVA 
 where RESERVA_ID = @RESERVA_ID 
   and RESERVA_FECHA_INICIO = CONVERT(VARCHAR(12),@FECHA,103)
   AND RESERVA_FECHA_HASTA IS NULL
   GROUP BY RESERVA_ID,CLIENTE_ID ;
   
IF @CANT = 1
BEGIN   
-- CONTINUA OK

INSERT INTO CONTROL_ZETA.ESTADIA (EST_RESERVA_ID, EST_FECHA_DESDE)
VALUES
(@RESERVA_ID, CONVERT(VARCHAR(12),GETDATE(),103))

SET @ESTADIA = @@IDENTITY

INSERT INTO CONTROL_ZETA.ESTADIA_CLIENTE (EST_ID, CLIENTE_ID)
VALUES
(@ESTADIA, @CLIENTE_ID)
END
ELSE
BEGIN
SET @codigo = 5
END
END

IF (@CODIGO_IN_OUT = 2)  -- EGRESO
BEGIN
   
UPDATE CONTROL_ZETA.ESTADIA
  SET EST_FECHA_HASTA = @FECHA
 WHERE EST_RESERVA_ID = @RESERVA_ID

END
  
END



---REGISTRAR CONSUMIBLES

---FACTURAR ESTADIA
CREATE FUNCTION CONTROL_ZETA.FN_BUSCA_FACTURA()
returns NUMERIC
AS
BEGIN
RETURN (SELECT MAX(FACTURA_NRO)+1 FROM CONTROL_ZETA.FACTURA)
END

CREATE PROCEDURE SP_REALIZAR_FACTURACION (@RESERVA_ID NUMERIC(18,0) ,
                                          @FORMAPAGO VARCHAR(2),
                                          @NROTARJETA INT,
                                          @COD_VERIF INT)
AS
BEGIN

DECLARE

DECLARE @ESTADIA_ID NUMERIC
DECLARE @TOTAL_ESTADIA INT
DECLARE @TIPO_REGIMEN TINYINT
DECLARE @NRO_FACT  NUMERIC


SELECT @TOTAL_RESERVA = DATEDIFF (DAY,R.RESERVA_FECHA_INICIO,R.RESERVA_FECHA_HASTA),
       @TOTAL_ESTADIA = DATEDIFF (DAY,E.EST_FECHA_DESDE ,E.EST_FECHA_HASTA),
       @ESTADIA_ID = E.EST_ID, 
       @TIPO_REGIMEN = CASE WHEN UPPER(RG.REG_DESCRIPCION) = 'ALL INCLUSIVE' THEN 1
        WHEN UPPER(RG.REG_DESCRIPCION) = 'ALL INCLUSIVE MODERADO' THEN 2
        ELSE 3 END TIPO_REGIMEN,
FROM CONTROL_ZETA.RESERVA R, 
     CONTROL_ZETA.ESTADIA E,
     CONTROL_ZETA.REGIMEN RG
WHERE R.RESERVA_ID = @RESERVA_ID
  AND R.RESERVA_FECHA_CANC IS NULL
  AND R.RESERVA_ESTADO IN ('RI')
  AND R.RESERVA_ID = E.EST_RESERVA_ID
  AND R.RESERVA_ID_REGIMEN = RG.REG_ID

SET @NRO_FACT = CONTROL_ZETA.FN_BUSCA_FACTURA(); 

INSERT INTO CONTROL_ZETA.FACTURA (FACTURA_NRO, FACTURA_FECHA,FACTURA_FORMA_PAGO,FACTURA_TARJ_NRO, FACTURA_TARJ_COD_SEG, EST_ID)
VALUES
(@NRO_FACT, GETDATE(),@FORMAPAGO,@NROTARJETA,@COD_VERIF,@ESTADIA_ID)

IF (@TOTAL_ESTADIA =  @TOTAL_RESERVA )
BEGIN

INSERT INTO CONTROL_ZETA.ITEM_FACTURA (FACTURA_NRO,ITEM_FACTURA_CANTIDAD,ITEM_FACTURA_MONTO, ITEM_DESCRIPCION)
VALUES
(@NRO_FACT, 1, @TOTAL_ESTADIA, 'COSTO POR ESTADIA')

INSERT INTO CONTROL_ZETA.ITEM_FACTURA (FACTURA_NRO,ITEM_FACTURA_CANTIDAD,ITEM_FACTURA_MONTO, ITEM_DESCRIPCION)
SELECT @NRO_FACT, 1,  C.CON_PRECIO, 'CONSUMIBLES'
FROM CONTROL_ZETA.ESTADIA_HAB_CON EH, CONTROL_ZETA.CONSUMIBLE C
WHERE EH.EST_ID = @ESTADIA_ID
AND EH.CON_ID = C.CON_ID


IF @TIPO_REGIMEN = 1 -- ALL INCLUSIVE
BEGIN
INSERT INTO CONTROL_ZETA.ITEM_FACTURA (FACTURA_NRO,ITEM_FACTURA_CANTIDAD,ITEM_FACTURA_MONTO, ITEM_DESCRIPCION)
SELECT @NRO_FACT, 1,  -SUM(C.CON_PRECIO), 'DESCUENTO ALL INCLUSIVE'
FROM CONTROL_ZETA.ESTADIA_HAB_CON EH, CONTROL_ZETA.CONSUMIBLE C
WHERE EH.EST_ID = @ESTADIA_ID
AND EH.CON_ID = C.CON_ID
GROUP BY C.CON_PRECIO

END
ELSE
BEGIN
INSERT INTO CONTROL_ZETA.ITEM_FACTURA (FACTURA_NRO,ITEM_FACTURA_CANTIDAD,ITEM_FACTURA_MONTO, ITEM_DESCRIPCION)
SELECT @NRO_FACT, 1,  SUM(C.CON_PRECIO), 'DESCUENTO ALL INCLUSIVE MODERADO'
FROM CONTROL_ZETA.ESTADIA_HAB_CON EH, CONTROL_ZETA.CONSUMIBLE C
WHERE EH.EST_ID = @ESTADIA_ID
AND EH.CON_ID = C.CON_ID
AND C.CON_ES_MODERADO = 'N'
END
 

UPDATE CONTROL_ZETA.FACTURA 
  SET CONTROL_ZETA.FACTURA.FACTURA_TOTAL =
 (select SUM(IFA.item_factura_monto) AS MONTO
 from CONTROL_ZETA.ITEM_FACTURA IFA
 where IFA.factura_nro = CONTROL_ZETA.FACTURA.factura_nro)
 WHERE FACTURA_NRO = @NRO_FACT; -- 89603
 
END;



---ESTADISTICA

-- ADECUAR A TRIMESTRES

-- HOTELES CON MAYOR CANTIDAD DE RESERVAS CANCELADAS
SELECT TOP 5  R.RESERVA_ID_HOTEL,H.HOTEL_PAIS, H.HOTEL_CALLE,
       H.HOTEL_NRO_CALLE, COUNT(*) CANTIDAD
  FROM CONTROL_ZETA.RESERVA R, CONTROL_ZETA.HOTEL H
 WHERE R.RESERVA_ESTADO = 'RI'
  AND R.RESERVA_ID_HOTEL = H.HOTEL_ID
 GROUP BY R.RESERVA_ID_HOTEL , H.HOTEL_PAIS, H.HOTEL_CALLE,H.HOTEL_NRO_CALLE
 ORDER BY COUNT(*) DESC, R.RESERVA_ID_HOTEL


-- HOTELES CON MAYOR CONSUMIBLES FACTURADOS
SELECT TOP 5  COUNT(*) CANT, H.HOTEL_NOMBRE, H.HOTEL_CALLE, H.HOTEL_NRO_CALLE
FROM CONTROL_ZETA.FACTURA F, 
     CONTROL_ZETA.ITEM_FACTURA IFA, 
     CONTROL_ZETA.ESTADIA E, 
     CONTROL_ZETA.RESERVA R,
     CONTROL_ZETA.HOTEL H
WHERE F.FACTURA_NRO = IFA.FACTURA_NRO
  AND F.EST_ID = E.EST_ID   
  AND IFA.ITEM_DESCRIPCION = 'CONSUMIBLES'
  AND E.EST_RESERVA_ID = R.RESERVA_ID
  AND R.RESERVA_ID_HOTEL = H.HOTEL_ID
GROUP BY  ITEM_FACTURA_CANTIDAD, H.HOTEL_CALLE, H.HOTEL_NRO_CALLE, H.HOTEL_NOMBRE
ORDER BY COUNT(*) DESC

-- HOTEL CON MAYOR CANTIDAD DE DIAS FUERA DE SERVICIO

SELECT TOP 5 SUM(DATEDIFF (DAY, HC.HOTEL_C_FECHA_DESDE, HC.HOTEL_C_FECHA_HASTA)) CANT,
        H.HOTEL_NOMBRE, H.HOTEL_CALLE, H.HOTEL_NRO_CALLE
FROM CONTROL_ZETA.HOTEL_CIERRE HC, 
     CONTROL_ZETA.HOTEL H
WHERE HC.HOTEL_C_ID = H.HOTEL_ID   
GROUP BY H.HOTEL_NOMBRE, H.HOTEL_CALLE, H.HOTEL_NRO_CALLE
ORDER BY SUM(DATEDIFF (DAY, HC.HOTEL_C_FECHA_DESDE, HC.HOTEL_C_FECHA_HASTA)) DESC



