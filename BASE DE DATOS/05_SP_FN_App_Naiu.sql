---Referencia Accion
--1:Alta-Insert
--2:Modificacion-Update
--3:Borrado-Delete

----ABM ROL-3 (Deberia cargar la tabla ROL, ROL_FUNC)
CREATE PROCEDURE CONTROL_ZETA.SP_ABM_ROL (@accion SMALLINT,@nombre varchar(20),@estado varchar(1))
as
begin
end;
---IMPORTANTE:Se tendria que hacer otro SP para asociar el ROL con la Funcionalidad y que desde la app se ejecute varias veces


---ASIGNACION DE FUNCIONES A ROL-3 (Carga tabla ROL_FUNC)
CREATE PROCEDURE CONTROL_ZETA.SP_ROL_FUNC(@accion SMALLINT,@rol_id TINYINT, @func_id TINYINT)
AS
BEGIN
END; 

---ABM HOTEL(Tabla Hotel)-2
CREATE PROCEDURE CONTROL_ZETA.SP_ABM_HOTEL()
AS
BEGIN
END;
---ABM HABITACION(Tabla habitaciones)-2
CREATE PROCEDURE CONTROL_ZETA.SP_ABM_RESERVA()
AS
BEGIN
END;
---ALTA RESERVA(Tabla RESERVA, RESERVA_CLIENTE)-1

--Verificacion de disponibilidad
CREATE FUNCTION CONTROL_ZETA.FN_VERIFICA_DISPONIBILIDAD(@hotel_id int,@fe_desde date,@fe_hasta date,@cant_hab tinyint,@tipo_hab SMALLINT)
returns tinyint
AS
BEGIN

RETURN(SELECT COUNT (H.HAB_ID) 
		FROM CONTROL_ZETA.HABITACION H 
		WHERE H.HAB_ID_HOTEL=@hotel_id AND
		H.HAB_ID_TIPO=@tipo_hab AND
		H.HAB_ID NOT IN (SELECT RH.HAB_ID 
						FROM CONTROL_ZETA.RESERVA_HABITACION RH 
						WHERE RH.RESERVA_ID IN (SELECT R.RESERVA_ID 
													FROM CONTROL_ZETA.RESERVA R 
													WHERE R.RESERVA_FECHA_INICIO=@fe_desde AND 
													R.RESERVA_FECHA_HASTA=@fe_hasta AND
													R.RESERVA_ESTADO IN('RI','RC','RM')
												)))

END;
GO

CREATE FUNCTION CONTROL_ZETA.get_id_reserva_new()
returns numeric
AS
BEGIN

RETURN(SELECT (MAX(RESERVA_ID)+1) FROM CONTROL_ZETA.RESERVA)

END;

GO
---Alta de Reserva
CREATE PROCEDURE CONTROL_ZETA.SP_ALTA_RESERVA(@hotel_id int,@fe_desde date,@fe_hasta date,@tipo_reg_id TINYINT,@cliente_id numeric,@id_reserva numeric OUTPUT)
AS
BEGIN

DECLARE
@ID NUMERIC

	SET @ID=CONTROL_ZETA.get_id_reserva_new()
	INSERT INTO CONTROL_ZETA.RESERVA (RESERVA_ID,RESERVA_FECHA_INICIO, RESERVA_FECHA_HASTA,	RESERVA_ID_REGIMEN, RESERVA_ID_HOTEL, RESERVA_ESTADO, CLIENTE_ID)
	VALUES(@ID,@fe_desde,@fe_hasta,@tipo_reg_id,@hotel_id,'RC',@cliente_id);
END;


GO
---Agregar habitacion reserva
CREATE PROCEDURE CONTROL_ZETA.SP_AGREGAR_HAB_RES(@id_reserva numeric,@cant_hab tinyint,@tipo_hab SMALLINT,@hotel_id int)
AS
BEGIN

	INSERT INTO CONTROL_ZETA.RESERVA_HABITACION(RESERVA_ID,HAB_ID)
	SELECT TOP (@cant_hab) @id_reserva,H.HAB_ID 
	FROM CONTROL_ZETA.HABITACION H 
	WHERE H.HAB_ID_TIPO=@tipo_hab AND 
	H.HAB_ID_HOTEL=@hotel_id
END;


GO

CREATE PROCEDURE CONTROL_ZETA.SP_CONSISTENCIA_RESERVAS()
AS
BEGIN

INSERT INTO CONTROL_ZETA.RESERVA_BKP (RESERVA_ID,  
            RESERVA_FECHA_INICIO, RESERVA_FECHA_HASTA, 
            RESERVA_ID_REGIMEN, RESERVA_ID_HOTEL, RESERVA_ESTADO, CLIENTE_ID)
SELECT R.RESERVA_ID, R.RESERVA_FECHA_INICIO, R.RESERVA_FECHA_HASTA,R.RESERVA_ID_REGIMEN,
R.RESERVA_ID_HOTEL,'RESERVA INCONSISTENTE',R.CLIENTE_ID 
FROM CONTROL_ZETA.RESERVA R 
WHERE R.RESERVA_ID NOT IN (SELECT RH.RESERVA_ID 
						FROM CONTROL_ZETA.RESERVA_HABITACION RH);
						
DELETE CONTROL_ZETA.RESERVA 
WHERE RESERVA_ID NOT IN (SELECT RESERVA_ID 
						FROM CONTROL_ZETA.RESERVA_HABITACION);
												
						
END;

---MODIFICACION RESERVA(Tabla RESERVA, RESERVA_CLIENTE)-1
CREATE PROCEDURE CONTROL_ZETA.SP_MODIF_RESERVA()
AS
BEGIN
END;
---CANCELAR RESERVA(Tabla RESERVA, RESERVA_CLIENTE)-1
CREATE PROCEDURE CONTROL_ZETA.SP_CANCELAR_RESERVA()
AS
BEGIN
END;

---REGISTRAR CONSUMIBLES(Tabla CON_EST_HAB)-2

